To print a character to screen in VGA text mode
 - write it on text buffer of the VGA HW

First byte: represents character that should be printed in ASCII encoding
Second byte: defines how character is displayed
 - first 4 bits defines foreground color
 - next 3 bits: background color
 - last bit: character should blink?

VGA text buffer is accessible via memory mapped I/O
 - reads/writes to that address dont access RAM
 - it directly access the text buffer on VGA HW 
 - (can read/write through normal memory operation to that address)

volatile: tells the compiler that write has side effects and shouldnt be optimized away

Spinlock: provides mutual exclusion by blocking threads when resource is already locked
 - threads tries to lock it again and again in a tight loop.
 - burns CPU time until mutex is free again

 ------------------

#[repr(u8)]
VGA buffer
Volatile
Spinlock